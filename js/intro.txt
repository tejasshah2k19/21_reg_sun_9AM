 js - javascript 

 www => html + css 

 js ->1995    ECMA-> 1997  no server interaction 

ECMA - specification

js - implementation 

 object -- class object 

 loop
 function 
 conditional 


 java -- is not javascript 


 tools ?? 
    text editor 
    browser [execute] [frontend]

    how browser can execute js code??? 


ME => chakra 
CHROME => V8
FIREFOX => spidermonkey 


.js  -> run => ME | CH | FF 


ES1 - 1997 

2015 - ES6

ES2016 

ES2018

var 



js 
    1) internal [ html ]
    2) external [ .js ]


---------------------------------------------------------------------------


variable :-
    var 
    ES6  ES2015 

    let 
    const 


let salary = 90000;
let salary = 95000;  // can not redeclare in same scope 



var salary = 25000;
var salary = 35000;

function add(){

    var ans = 0;//global variable
}

console.log(ans);


//let is associated with scope 
function add(){

    let ans = 0; //local variable
}

console.log(ans); //error we can not access outside function 

------------------------

let a = 90;

{

    let a = 900;
    console.log(a);//900
    //let a = 909; // error 
}

console.log(a);//90 


------------------------

{
    let a = 90;
    //log -> 90 
}
console.log(a);//error 

------------------------
var a = 900;

{
    var a = 90;
    //log -> 90 
}
console.log(a);// 90 
------------------------
const keyword --> ES6 
    to make your variable constant.
    once we initialized we can not re-init. //assignment //no change at all  //fix

    const A = 90;
    A = 99; //error 

    //objects ref array => const

------------------------

EVENTS 

events are things that happens in html element. 

button -> click
link -> hover , click,double click 
text -> keypress,keydown,keyup,keyrelease 


js will reac on any event.

<input type="button" onclick="console.log('button click')" /> 

onclick
onchange
onmouseover
keyup 
onload 

------------------------

DOM 
  Document Object Model 

  js -> access any html element { tag } or want to change any html element 

  page load --> 
            Document

            HTML 
    HEAD            BODY
    TITLE           INPUT  | H1 | FORM 
    text            text 

1) element modify
2) attribute
3) css 
4) remove HTML 



                        DOM
1)  CORE DOM   
2)  XML DOM
3)  HTML DOM 



HTML DOM -> methods , properties
1) getElementById

1 innerHTML
2 innerText
3 textContent 



-----------------------------------------------

array => which can hold n number of values 
         collection of multiple type of data 

a = 10 
//
//
a= 20 

a = [10,20] //single variable can hold multiple values 

a = [10,20,"royal"] //Object


a = [] //blank array 

a = [11,22,33] // python --> list 

a[0] // 11 

a[0]= 1000

a // [1000,22,33]

const a = [1,2,4]


---------------------------------

17-07-2021 Task 
1) take string from user using input check its palindrom or not. 
2) modify your array program 
    2.1) add max button , find out max from array 
    2.2) add sort button , sort an array 
    2.3) search button , this button will prompt a number from user and search it in array
            if number found print number is present 
            else please try tomorrow with better luck.
            
---------------------------------
c++ / java 

class object 

let car = {
    name:"ciaz",
    price: 1234567
}

let user = {
    name:"abc",
    email:"abc@gmail.com",
    password:"aaaa"
}

------------------------------
to add any new element in html 
we have createElement method and to append any other element in side parent element we have 
appendChild method 


let table  = document.createElement("table")
let thead  = document.createElement("thead")
let tbody  = document.createElement("tbody")

table.appendChild(thead)
table.appendChild(tbody)
 
------------------------------

to remove any element / html tag using dom we need to remove() 
first we need locate it using id or name or any other methods 

let tr = document.getElementById("1")
tr.remove() 

if you want to set any attribute in html tag / element using dom 
we need to use setAttribute()  -> it has two arguments key,value => key is any valid attribute and value is any valid value 

let tr = document.createElement("tr")
ts.setAttribute("id",1)

let tr = document.getElementById("1")
tr.remove() 


------------------------------

RegEX 

    let name = "royal education" 

    let index = name.search("education") // 6 

    searc method + regex 

    let name = "royal education" 
    let index = name.search(/education/) // 6 ->  


    let name = "royal education" 
    let index = name.search(/Education/) // -1 ->  



    let name = "royal education" 
    let index = name.search(/Education/i) // 6 -> i is used to ignore case 


    [] 
    +
    ?
    *

    metacharacter 

    \d => digit  
      

Password 
    0-9 1 
    a-z 1
    A-Z 1

  
        digit = /\d/
    let digit = /[0-9]/
    let small = /[a-z]/
    let upper = /[A-Z]/

    let data = "john@gmail.com"

    if(digit.test(data) == false){
        document.getElementById("emailError").innerHTML = "Please Enter atleast 1 digit"
    }else   if(digit.test(data) == false){
        document.getElementById("emailError").innerHTML = "Please Enter atleast 1 digit"
    } else if(digit.test(data) == false){
        document.getElementById("emailError").innerHTML = "Please Enter atleast 1 digit"
    } 

    if(digit.test(data) == false || small.test(data) == false  || upper.test(data) == false){
        document.getElementById("emailError").innerHTML = "Password must contains digit - small alpha - upper alpha "
    }


    
    let data = "royaleducation ahmedabad" 

    data.match(/e/)


--------------------------------------------------------------

date -> class 
Date 

let date  = new Date() // create object 



dd-mm-yy 
dd-mon-yyyy 
year - currentYear 

--------------------------------------------------------------
Task: ADd DateOfBirth In signup master and validate user must be 18+  

--------------------------------------------------------------

create one document that dispay live clock.

--------------------------------------------------------------

object - oriented 

class - object 

ES6  => ECMAScript = 2015
 
class User {
    //variable --> userId firstName email password  
    //instance variable == class 
    constructor(){
        this.firstName = ""
        this.email = ""
        this.userId = 0
        this.password = "" 
    }
 
/*
    constructor(userId,fn,email,password){
        this.userId = userId 
        this.firstName = fn 
    }
*/
}

let user = new User();

let user = new User(1,"tejas","tejas@gmail.com","tejaspassword")

let data = {
    firstName:
    email : 
}

let data1 = {

    firstName:
    email:
    password: 
}


js 


class A{


}

let a = new A() 
----------------------------------------------------------
oop-> 
    inheritance --> object of one class can access property of another class 
    to achieve inheritance we will use extends keyword  


    class Employee{
        constructor(f,c){
            this.firstName = f
            this.city = c
        }
        printData()
        {
            console.log("\nFirstName : "+this.firstName);
            console.log("\nCity : "+this.city);    
        }
    }
    class FullTimeEmp extends Employee{
        constructor(fn,city,salary){
                super(fn,city); //
                this.salary = salary 
        }
    }
    class PartTimeEmp extends Employee{
        constructor(fn,city,dailyPay){
            super(fn,city) //parent 
            this.dailyPay = dailyPay
        }
    }
    let ft = new FullTimeEmp("gabbar","ahmedabad",25000)
    let pt = new PartTimeEmp("babbar","surat",24000)
    ft.printData(); //firstName city

----------------------------------------------------------

ecom 

we have two types of users in ecom app. 
1)admin
2)buyer 

admin adds product for sell , buyer buy products 

both can access app via login. without login (public page) we have loging  and signup page in app. 

admin can,
        login
        create another admin 
        can add - list - update and remove products 
        can list order

buyer can,
        signup
        login 
        home page - after login buyer will redirect to home page. 

        home page = have list of all products and link or button for buy product 
        we dont have cart , when user click buy product , order is placed for that buyer. 
        also buyer can view all the orders that is placed by them. 
        buyer can not view each others order , they can view theirs orders only. 


-----------------------------------------------------------------------

BOM --> Browser object model 
DOM --> document  


window ->  
    window.document 
    window.screen
    window.navigator 
    window.location 

    document.getElementById("p")
    window.document.getElementById("p")

    window.innerHeight 
    window.innerWidth 
    [scorllbars,toolmenu,filemenu]


    window.open(url,frameName,options);
screen

navigator:-> browser


-----------------------------------------------------------------------

storageApi 

localStorage
sessionStorage
cookie 

-----------------------------------------------------------------------























































 






